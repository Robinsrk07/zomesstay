model Payment {
  id            String   @id @default(uuid()) @db.Char(36)
  transactionID String   @unique
  customerId    String   @db.Char(36)
  propertyId    String   @db.Char(36)
  amount        Decimal  @db.Decimal(10, 2)
  paymentMethod String
  status        String
  date          DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  isDeleted     Boolean  @default(false)

  bookingId String?  @db.Char(36)
  booking   Booking? @relation(fields: [bookingId], references: [id])

  customer User     @relation(fields: [customerId], references: [id])
  property Property @relation(fields: [propertyId], references: [id])

  @@index([customerId])
  @@index([propertyId])
  @@index([bookingId])
  @@index([isDeleted])
}

model Promotion {
  id         String          @id @default(uuid()) @db.Char(36)
  propertyId String          @db.Char(36)
  discount   Decimal         @db.Decimal(10, 2)
  validFrom  DateTime
  validTo    DateTime
  status     PromotionStatus @default(active)
  type       PromotionType
  code       String          @unique
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  isDeleted  Boolean         @default(false)

  property Property  @relation(fields: [propertyId], references: [id])
  bookings Booking[]

  @@index([propertyId])
  @@index([isDeleted])
}
